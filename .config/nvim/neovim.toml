[[plugins]]
repo = 'tversteeg/registers.nvim'

[[plugins]]
repo = 'nathom/filetype.nvim'
hook_add = '''
lua << EOF
  require('filetype').setup{
    overrides = {
      literal = {
        ['.textlintrc'] = 'json',
        ['tsconfig.json'] = 'jsonc'
      },
      shebang = {
        bash = 'sh',
      }
    },
  }
EOF
'''
hook_post_source = '''
syntax on
'''

[[plugins]]
repo = 'folke/which-key.nvim'
lazy = 1
on_cmd = ['WhichKey']

[[plugins]]
repo = 'kevinhwang91/nvim-hlslens'
hook_add = '''
noremap <silent> n <Cmd>execute('normal! ' . v:count1 . 'n')<CR><Cmd>lua require('hlslens').start()<CR>
noremap <silent> N <Cmd>execute('normal! ' . v:count1 . 'N')<CR><Cmd>lua require('hlslens').start()<CR>
noremap * *<Cmd>lua require('hlslens').start()<CR>
noremap # #<Cmd>lua require('hlslens').start()<CR>
noremap g* g*<Cmd>lua require('hlslens').start()<CR>
noremap g# g#<Cmd>lua require('hlslens').start()<CR>
nnoremap <silent> <Esc><Esc> :nohlsearch<CR>
'''

[[plugins]]
repo = 'lewis6991/gitsigns.nvim'
hook_post_source = '''
lua << EOF
  require('gitsigns').setup{
    current_line_blame = true,
    current_line_blame_opts = {
      virt_text = true,
      virt_text_pos = 'eol',
      delay = 1000
    },
    current_line_blame_formatter_opts = {
      relative_time = false
    }
  }
EOF
'''

[[plugins]]
repo = 'nvim-lualine/lualine.nvim'
hook_post_source = '''
lua << EOF
  local function skkstatus()
    local alias = { [''] = 'A', hira = 'あ', kata = 'ア', hankata = 'ｱ', zenkaku = "Ａ" }
    return alias[vim.g['skkeleton#mode']]
  end
  local custom_nightfly = require'lualine.themes.nightfly'
  custom_nightfly.insert.a.bg = custom_nightfly.normal.a.bg
  custom_nightfly.visual.a.bg = custom_nightfly.normal.a.bg
  custom_nightfly.normal.y = {}
  custom_nightfly.normal.y.bg = custom_nightfly.normal.a.bg
  custom_nightfly.normal.y.fg = custom_nightfly.normal.a.fg
  custom_nightfly.normal.z = custom_nightfly.normal.b

  require'lualine'.setup {
    options = {
      icons_enabled = true,
      theme = custom_nightfly,
      component_separators = { left = '', right = ''},
      section_separators = { left = '', right = ''},
      always_divide_middle = true,
    },
    sections = {
      lualine_a = { 'mode', skkstatus },
      lualine_b = { { 'branch', separator = '', padding = { left = 1, right = 0 } }, { 'diff', colored = false }, { 'filename', path = 1, shorting_target = 30 } },
      lualine_c = {},
      lualine_x = { 'filetype', { 'encoding', separator = '', padding = { left = 1, right = 0 } }, 'fileformat' },
      lualine_y = {{ 'location', padding = 0, separator = '' }, {'progress', padding = { left = 0, right = 1 } }},
      lualine_z = {{ 'diagnostics', sources = {'nvim'}, colored = false, symbols = { error = 'E:', warn = 'W:', info = 'I', hint = 'H:' } }}
    }
  }
EOF
'''

[[plugins]]
repo = 'antoinemadec/FixCursorHold.nvim'

[[plugins]]
repo = 'norcalli/nvim-colorizer.lua'
hook_post_source = '''
lua require'colorizer'.setup()
'''

[[plugins]]
repo = 'kyazdani42/nvim-web-devicons'

[[plugins]]
repo = 'romgrk/barbar.nvim'
hook_add = '''
  nnoremap <silent> <C-s> <Cmd>BufferPick<CR>
  nnoremap <silent> <leader>bd <Cmd>BufferOrderByDirectory<CR>
  nnoremap <silent> <leader>bl <Cmd>BufferOrderByLanguage<CR>
  nnoremap <silent> <S-TAB> <Cmd>BufferPrevious<CR>
  nnoremap <silent> <TAB> <Cmd>BufferNext<CR>
'''

[[plugins]]
repo = 'monaqa/dial.nvim'
lazy = 1
on_map = { n = '<Plug>'}
hook_add = '''
  nmap <silent> <C-a> <Plug>(dial-increment)
  nmap <silent> <C-x> <Plug>(dial-decrement)
'''
hook_source = '''
lua << EOF
  local dial = require"dial"
  dial.config.searchlist = {
    normal = {
      "number#decimal#fixed#zero",
      "date#[%Y/%m/%d]",
      "date#[%m/%d]",
      "date#[%H:%M]",
    },
    visual = {
      "number#decimal",
      "date#[%Y/%m/%d]",
      "date#[%m/%d]",
      "date#[%H:%M]",
      "color#hex",
      "char#alph#small#word",
      "char#alph#capital#word",
    }
  }
EOF
'''

[[plugins]]
repo = 'nvim-lua/popup.nvim'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'phaazon/hop.nvim'
hook_post_source = '''
lua require'hop'.setup()
'''
hook_add = '''
nmap f <cmd>lua require'hop'.hint_words()<CR>
'''

[[plugins]]
repo = 'b3nj5m1n/kommentary'
hook_post_source = '''
lua << EOF
  require('kommentary.config').configure_language("typescriptreact", {
    single_line_comment_string = "//",
    multi_line_comment_strings = {"{/*", "*/}"}
  })
EOF
'''

[[plugins]]
repo = 'kwkarlwang/bufresize.nvim'
