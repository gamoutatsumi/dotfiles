[[plugins]]
repo = 'Shougo/ddu.vim'
hooks_file = '$BASE_DIR/dein/ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-ui-ff'

[[plugins]]
repo = 'Shougo/ddu-ui-filer'
hook_add = '''
  "nnoremap <silent> <C-e> <Cmd>call ddu#start({'ui': 'filer', 'sources': [{'name': 'file', 'params': {}}], 'sourceOptions': {'_': {'columns': ['icon_filename']}}, 'kindOptions': {'file': { 'defaultAction': 'open' }}})<CR>
'''

[[plugins]]
repo = 'Shougo/ddu-column-filename'

[[plugins]]
repo = 'Shougo/ddu-source-file'

[[plugins]]
repo = 'Shougo/ddu-source-file_rec'

[[plugins]]
repo = 'Shougo/ddu-kind-file'

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'

[[plugins]]
repo = 'yuki-yano/ddu-filter-fzf'

[[plugins]]
repo = 'Shougo/ddu-commands.vim'

[[plugins]]
repo = 'uga-rosa/ddu-source-lsp'
hook_add = '''
  nnoremap <silent> grf <Cmd>call ddu#start({ 'sources': [{ 'name': 'lsp_references' }], 'uiParams': { 'ff': { 'autoAction': { 'name': 'preview', 'params': { 'previewCmds': ['bat', '-n', '%s', '-r', '%b:%e', '--highlight-line', '%l'] } } } } })<CR>
  nnoremap <silent> ;d <Cmd>call ddu#start({ 'sources': [{ 'name': 'lsp_diagnostic' }], 'uiParams': {
  \ 'ff': {
  \   'autoAction': { 'name': 'preview', 'params': { 'previewCmds': ['bat', '-n', '%s', '-r', '%b:%e', '--highlight-line', '%l'] } },
  \ },
  \ }})<CR>
  nnoremap <silent> gd <Cmd>call ddu#start({ 'sources': [{ 'name': 'lsp_definition', 'params': { 'method': 'textDocument/definition' } }], 'uiParams': {
  \ 'ff': {
  \   'autoAction': { 'name': 'preview', 'params': { 'previewCmds': ['bat', '-n', '%s', '-r', '%b:%e', '--highlight-line', '%l'] } },
  \   'immediateAction': 'open',
  \ },
  \ }})<CR>
  nnoremap <silent> gD <Cmd>call ddu#start({ 'sources': [{ 'name': 'lsp_definition', 'params': { 'method': 'textDocument/declaration' } }], 'uiParams': {
  \ 'ff': {
  \   'autoAction': { 'name': 'preview', 'params': { 'previewCmds': ['bat', '-n', '%s', '-r', '%b:%e', '--highlight-line', '%l'] } },
  \   'immediateAction': 'open',
  \ },
  \ }})<CR>
'''

[[plugins]]
repo = 'shun/ddu-source-buffer'
hook_add = '''
  nnoremap <silent> ;b <Cmd>call ddu#start({ 'sources': [{ 'name': 'buffer' }] })<CR>
'''

[[plugins]]
repo = 'shun/ddu-source-rg'
hook_add = '''
  function! DduFind() abort
    let word = input("search word: ")
    call ddu#start({'sources': [{'name': 'rg', 'params': {'input': word, 'inputType': 'migemo', 'args': ['--ignore-case', '--json']}}], 'uiParams': {
  \ 'ff': {
  \   'autoAction': { 'name': 'preview', 'params': { 'previewCmds': ['bat', '-n', '%s', '-r', '%b:%e', '--highlight-line', '%l'] } },
  \ },
  \ }})
  endfunction
  nnoremap <silent> ;g <Cmd>call DduFind()<CR>
'''

[[plugins]]
repo = 'kuuote/ddu-source-mr'
hook_add = '''
  nnoremap <silent> ;mu <Cmd>call ddu#start({ 'sources': [{ 'name': 'mr', 'params': { 'kind': 'mru', 'current': v:true } }], 'uiParams': {
  \ 'ff': {
  \   'autoAction': { 'name': 'preview', 'params': { 'previewCmds': ['bat', '-n', '%s', '-r', '%b:%e', '--highlight-line', '%l'] } },
  \ },
  \ }})<CR>
  nnoremap <silent> ;mw <Cmd>call ddu#start({ 'sources': [{ 'name': 'mr', 'params': { 'kind': 'mrw', 'current': v:true } }], 'uiParams': {
  \ 'ff': {
  \   'autoAction': { 'name': 'preview', 'params': { 'previewCmds': ['bat', '-n', '%s', '-r', '%b:%e', '--highlight-line', '%l'] } },
  \ },
  \ }})<CR>
'''

[[plugins]]
repo = 'matsui54/ddu-source-file_external'
hook_add = '''
  nnoremap <silent> ;f <Cmd>call ddu#start({ 'sources': [{'name': 'file_external'}], 'uiParams': {
  \ 'ff': {
  \   'autoAction': { 'name': 'preview', 'params': { 'previewCmds': ['bat', '-n', '%s', '-r', '%b:%e', '--highlight-line', '%l'] } },
  \ },
  \ }})<CR>
'''
hook_post_source = '''
  call ddu#custom#patch_global('sourceParams', {
  \ 'file_external': {'cmd': ['git', 'ls-files', '--exclude-standard', '-c', '-o']},
  \ })
'''

[[plugins]]
repo = 'ryota2357/ddu-column-icon_filename'

[[plugins]]
repo = 'Milly/ddu-filter-kensaku'

[[plugins]]
repo = 'kuuote/ddu-filter-fuse'

[[plugins]]
repo = 'Milly/ddu-filter-merge'

[[plugins]]
repo = 'matsui54/ddu-vim-ui-select'

[[plugins]]
repo = 'matsui54/ddu-source-help'
hook_add = '''
  nnoremap <silent> ;h <Cmd>call ddu#start({ 'sources': [{ 'name': 'help' }], 'uiParams': {
  \ 'ff': {
  \   'autoAction': { 'name': 'preview' },
  \ },
  \ }})<CR>
'''

[[plugins]]
repo = 'uga-rosa/ddu-filter-converter_devicon'

[[plugins]]
repo = 'Shougo/ddu-source-action'
