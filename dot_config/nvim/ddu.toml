[[plugins]]
repo = 'Shougo/ddu.vim'
hook_post_source = '''
  call ddu#custom#patch_global({
  \ 'ui': 'ff',
  \ 'sourceOptions': {
  \   '_': {
  \     'ignoreCase': v:true,
  \     'matchers': ['merge'],
  \   },
  \ },
  \ 'uiParams': {
  \   'ff': {
  \      'startFilter': v:true,
  \      'autoAction': { 'name': 'preview' },
  \      'previewSplit': 'vertical',
  \      'previewWidth': &columns / 2,
  \    },
  \   'filer': {
  \      'split': 'floating',
  \    }
  \ },
  \ 'kindOptions': {
  \   'file': {
  \     'defaultAction': 'open',
  \     'previewCmds': ['bat', '-n', '%s', '-r', '%b:%e', '--highlight-line', '%l']
  \   },
  \   'ui_select': {
  \     'defaultAction': 'select',
  \   },
  \  'help': {
  \    'defaultAction': 'open',
  \   },
  \ },
  \ 'filterParams': {
  \   'matcher_kensaku': {
  \     'highlightMatched': 'Search',
  \  },
  \   'matcher_fzf': {
  \     'highlightMatched': 'Search',
  \  },
  \  'merge': {
  \    'filters': [
  \      {'name': 'matcher_kensaku', 'weight': 2.0},
  \      'matcher_fzf',
  \    ],
  \    'unique': v:true,
  \  }
  \ },
  \ })
'''

[[plugins]]
repo = 'Shougo/ddu-ui-ff'

[[plugins]]
repo = 'Shougo/ddu-ui-filer'
hook_add = '''
  "nnoremap <silent> <C-e> <Cmd>call ddu#start({'ui': 'filer', 'sources': [{'name': 'file', 'params': {}}], 'sourceOptions': {'_': {'columns': ['icon_filename']}}, 'kindOptions': {'file': { 'defaultAction': 'open' }}})<CR>
'''

[[plugins]]
repo = 'Shougo/ddu-column-filename'

[[plugins]]
repo = 'Shougo/ddu-source-file'

[[plugins]]
repo = 'Shougo/ddu-source-file_rec'

[[plugins]]
repo = 'Shougo/ddu-kind-file'

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'

[[plugins]]
repo = 'yuki-yano/ddu-filter-fzf'

[[plugins]]
repo = 'Shougo/ddu-commands.vim'

[plugins.ftplugin]
ddu-ff = '''
  nnoremap <buffer> <CR> <Cmd>call ddu#ui#do_action("itemAction")<CR>
  nnoremap <buffer> <Space> <Cmd>call ddu#ui#do_action("toggleSelectItem")<CR>
  nnoremap <buffer> i <Cmd>call ddu#ui#do_action("openFilterWindow")<CR>
  nnoremap <buffer> q <Cmd>call ddu#ui#do_action("quit")<CR>
  nnoremap <buffer> p <Cmd>call ddu#ui#do_action("preview")<CR>
  setlocal cursorline
'''
ddu-ff-filter = '''
  inoremap <buffer> <CR> <Esc><Cmd>call ddu#ui#do_action("closeFilterWindow")<CR>
  nnoremap <buffer> <CR> <Cmd><Cmd>call ddu#ui#do_action("closeFilterWindow")<CR>
'''
ddu-filer = '''
  nnoremap <buffer><silent> <CR>
        \ <Cmd>call ddu#ui#filer#do_action('itemAction')<CR>
  nnoremap <buffer><silent> <Space>
        \ <Cmd>call ddu#ui#filer#do_action('toggleSelectItem')<CR>
  nnoremap <buffer> l
        \ <Cmd>call ddu#ui#filer#do_action('expandItem',
        \ {'mode': 'toggle'})<CR>
  nnoremap <buffer> h
        \ <Cmd>call ddu#ui#filer#do_action('collapseItem')<CR>
  nnoremap <buffer><silent> q
        \ <Cmd>call ddu#ui#filer#do_action('quit')<CR>
  nnoremap <buffer><silent> <C-e>
        \ <Cmd>call ddu#ui#filer#do_action('quit')<CR>
'''

[[plugins]]
repo = 'gamoutatsumi/ddu-source-nvim-lsp'
hook_add = '''
  nnoremap <silent> ;d <Cmd>call ddu#start({ 'sources': [{ 'name': 'nvim_lsp_diagnostic_all' }] })<CR>
'''

[[plugins]]
repo = 'shun/ddu-source-buffer'
hook_add = '''
  nnoremap <silent> ;b <Cmd>call ddu#start({ 'sources': [{ 'name': 'buffer' }] })<CR>
'''

[[plugins]]
repo = 'shun/ddu-source-rg'
hook_add = '''
  function! DduFind() abort
    let word = input("search word: ")
    call ddu#start({'sources': [{'name': 'rg', 'params': {'input': word, 'inputType': 'migemo', 'args': ['--ignore-case', '--json']}}]})
  endfunction
  nnoremap <silent> ;g <Cmd>call DduFind()<CR>
'''

[[plugins]]
repo = 'kuuote/ddu-source-mr'
hook_add = '''
  nnoremap <silent> ;mu <Cmd>call ddu#start({ 'sources': [{ 'name': 'mr', 'params': { 'kind': 'mru', 'current': v:true } }] })<CR>
  nnoremap <silent> ;mw <Cmd>call ddu#start({ 'sources': [{ 'name': 'mr', 'params': { 'kind': 'mrw', 'current': v:true } }] })<CR>
'''

[[plugins]]
repo = 'matsui54/ddu-source-file_external'
hook_add = '''
  nnoremap <silent> ;f <Cmd>call ddu#start({ 'sources': [{'name': 'file_external'}] })<CR>
'''
hook_post_source = '''
  call ddu#custom#patch_global('sourceParams', {
  \ 'file_external': {'cmd': ['git', 'ls-files', '--exclude-standard', '-c', '-o']},
  \ })
'''

[[plugins]]
repo = 'ryota2357/ddu-column-icon_filename'

[[plugins]]
repo = 'Milly/ddu-filter-kensaku'

[[plugins]]
repo = 'kuuote/ddu-filter-fuse'

[[plugins]]
repo = 'Milly/ddu-filter-merge'

[[plugins]]
repo = 'matsui54/ddu-vim-ui-select'

[[plugins]]
repo = 'matsui54/ddu-source-help'
hook_add = '''
  nnoremap <silent> ;h <Cmd>call ddu#start({ 'sources': [{ 'name': 'help' }] })<CR>
'''
