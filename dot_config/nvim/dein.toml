[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'bluz71/vim-nightfly-guicolors'
hook_add = '''
  if !exists('g:nvui')
    let g:nightflyTransparent = 1
  endif
  colorscheme nightfly
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add = '''
  let g:WebDevIconsNerdTreeBeforeGlyphPadding=''
  let g:WebDevIconsUnicodeDecorateFolderNodes=v:true
  if exists('g:loaded_webdevicons')
    webdevicons#refresh()
  endif
'''

[[plugins]]
repo = 'itchyny/vim-parenmatch'

#[[plugins]]
#repo = 'edkolev/tmuxline.vim'
#hook_add = '''
#let g:tmuxline_preset = {
  #\ 'a': '[#S:#I:#P]',
  #\ 'win': ['#I', '#{?#{m:ssh,#W},#{ssh-host},#W} #F'],
  #\ 'cwin': ['#I','#{?#{m:ssh,#W},#{ssh-host},#W} #F'],
  #\ 'y': ['%Y-%m-%d', '%H:%M'],
  #\ 'options': {
    #\ 'status': 'on',
    #\ 'status-left-style': 'none',
    #\ 'status-right-style': 'none',
    #\ 'status-right-length': '100',
    #\ 'status-left-length': '100',
  #\   }
  #\ }
#let g:tmuxline_status_justify = 'left'
#'''

[[plugins]]
repo = 'lambdalisue/nerdfont.vim'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'
type__depth = '1'
hook_add = '''
  set helplang=ja,en
'''

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'lambdalisue/fern.vim'
hook_add = '''
  let g:fern#disable_drawer_hover_popup=1
  let g:fern#drawer_width=30
  let g:fern#renderer="nerdfont"
  let g:fern#renderer#nerdfont#padding='  '
  let g:fern#renderer#nerdfont#indent_markers=1
  let g:fern#disable_default_mappings=1
  let g:fern#hide_cursor=0
  let g:fern#default_hidden=1
  let g:fern_disable_startup_warnings=1
  nnoremap <silent> <C-e> <cmd>Fern . -drawer -reveal=%:p -toggle<CR>
  nnoremap <silent> <Plug>(fern-close-drawer) <cmd>FernDo close -drawer -stay<CR>
'''

[plugins.ftplugin]
fern = '''
  nmap <buffer><silent><nowait> <Plug>(fern-action-open-and-close) <Plug>(fern-action-open:select)<Plug>(fern-close-drawer)
  nmap <buffer><silent><nowait><expr> <Plug>(fern-expand-or-collapse) fern#smart#leaf("<Plug>(fern-action-collapse)", "<Plug>(fern-action-expand)", "<Plug>(fern-action-collapse)")
  nmap <buffer><silent><nowait><expr> <Plug>(fern-open-or-expand) fern#smart#leaf("<Plug>(fern-action-open-and-close)", "<Plug>(fern-action-expand)")
  nmap <buffer><silent><nowait> a <Plug>(fern-choice)
  nmap <buffer><silent><nowait> t <Plug>(fern-expand-or-collapse)
  nmap <buffer><silent><nowait> <CR> <Plug>(fern-open-or-expand)
  nmap <buffer><silent><nowait> o <Plug>(fern-action-open-and-close)
  nmap <buffer><silent><nowait> l <Plug>(fern-action-expand)
  nmap <buffer><silent><nowait> h <Plug>(fern-action-collapse)
  nmap <buffer><silent><nowait> x <Plug>(fern-action-mark:toggle)
  vmap <buffer><silent><nowait> x <Plug>(fern-action-mark:toggle)
  nmap <buffer><silent><nowait> N <Plug>(fern-action-new-file)
  nmap <buffer><silent><nowait> K <Plug>(fern-action-new-dir)
  nmap <buffer><silent><nowait> d <Plug>(fern-action-trash)
  nmap <buffer><silent><nowait> r <Plug>(fern-action-rename)
  nmap <buffer><silent><nowait> c <Plug>(fern-action-copy)
  nmap <buffer><silent><nowait> m <Plug>(fern-action-move)
  nmap <buffer><silent><nowait> ! <Plug>(fern-action-hidden-toggle)
  nmap <buffer><silent><nowait> <C-g> <Plug>(fern-action-debug)
  nmap <buffer><silent><nowait> ? <Plug>(fern-action-help)
  nmap <buffer><silent><nowait> <C-c> <Plug>(fern-action-cancel)
  nmap <buffer><silent><nowait> . <Plug>(fern-action-repeat)
  nmap <buffer><silent><nowait> R <Plug>(fern-action-redraw)
  nmap <buffer><silent><nowait> q <cmd>quit<CR>
  nmap <buffer><silent><nowait> Q <cmd>bwipe!<CR>
  setlocal nonu
  setlocal signcolumn=no
  setlocal nornu
  call glyph_palette#apply()
'''

[[plugins]]
repo = 'lambdalisue/fern-renderer-nerdfont.vim'

[[plugins]]
repo = 'lambdalisue/fern-git-status.vim'

[[plugins]]
repo = 'lambdalisue/mr.vim'

[[plugins]]
repo = 'arthurxavierx/vim-caser'
hook_add = '''
  let g:caser_no_mappings = 1
  nmap gs_ <Plug>CaserSnakeCase
  nmap gsc <Plug>CaserCamelCase
  nmap gsm <Plug>CaserMixedCase
'''

[[plugins]]
repo = 'vimpostor/vim-tpipeline'
hook_add = '''
  let g:tpipeline_autoembed = 0
  au FocusGained * ++once call tpipeline#initialize()
'''

[[plugins]]
repo = 'embear/vim-localvimrc'
hook_add = '''
  let g:localvimrc_persistent = 1
'''

[[plugins]]
repo = 'aklt/plantuml-syntax'

[[plugins]]
repo = 'rhysd/committia.vim'

[[plugins]]
repo = 'rhysd/clever-f.vim'
