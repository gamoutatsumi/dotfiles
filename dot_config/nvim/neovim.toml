[[plugins]]
repo = 'tversteeg/registers.nvim'

[[plugins]]
repo = 'folke/which-key.nvim'

# [[plugins]]
# repo = 'kevinhwang91/nvim-hlslens'
# hook_add = '''
# noremap <silent> n <Cmd>execute('normal! ' . v:count1 . 'n')<CR><Cmd>lua require('hlslens').start()<CR>
# noremap <silent> N <Cmd>execute('normal! ' . v:count1 . 'N')<CR><Cmd>lua require('hlslens').start()<CR>
# noremap * *<Cmd>lua require('hlslens').start()<CR>
# noremap # #<Cmd>lua require('hlslens').start()<CR>
# noremap g* g*<Cmd>lua require('hlslens').start()<CR>
# noremap g# g#<Cmd>lua require('hlslens').start()<CR>
# nnoremap <silent> <Esc><Esc> <Cmd>nohlsearch<CR>
# '''

[[plugins]]
repo = 'lewis6991/gitsigns.nvim'
lua_post_source = '''
require('gitsigns').setup{
  current_line_blame = true,
  current_line_blame_opts = {
    virt_text = true,
    virt_text_pos = 'eol',
    delay = 1000
  },
  current_line_blame_formatter_opts = {
    relative_time = false
  },
  on_attach = function(bufnr)
    local gs = require("gitsigns")

    local function map(mode, l, r, opts)
      opts = opts or {}
      opts.buffer = bufnr
      vim.keymap.set(mode, l, r, opts)
    end

    map('n', ']c', function()
      if vim.wo.diff then return ']c' end
      vim.schedule(function() gs.next_hunk() end)
      return '<Ignore>'
    end, {expr=true})

    map('n', '[c', function()
      if vim.wo.diff then return '[c' end
      vim.schedule(function() gs.prev_hunk() end)
      return '<Ignore>'
    end, {expr=true})

    map('n', ']g', '<Cmd>Gitsigns stage_hunk<CR>')
    map('n', '[g', '<Cmd>Gitsigns undo_stage_hunk<CR>')
  end
}
'''

[[plugins]]
repo = 'nvim-lualine/lualine.nvim'
lua_post_source = '''
local function skkstatus()
  local alias = { [''] = 'A', hira = 'あ', kata = 'ア', hankata = 'ｱ', zenkaku = "Ａ", abbrev = '@' }
  return alias[vim.g['skkeleton#mode']]
end

local custom_nightfly = require'lualine.themes.nightfly'
custom_nightfly.insert.a.bg = custom_nightfly.normal.a.bg
custom_nightfly.visual.a.bg = custom_nightfly.normal.a.bg
custom_nightfly.normal.y = {}
custom_nightfly.normal.y.bg = custom_nightfly.normal.a.bg
custom_nightfly.normal.y.fg = custom_nightfly.normal.a.fg
custom_nightfly.insert.y = {}
custom_nightfly.insert.y.bg = custom_nightfly.normal.a.bg
custom_nightfly.insert.y.fg = custom_nightfly.normal.a.fg
custom_nightfly.normal.y = {}
custom_nightfly.normal.y.bg = custom_nightfly.normal.a.bg
custom_nightfly.normal.y.fg = custom_nightfly.normal.a.fg
custom_nightfly.command = {}
custom_nightfly.command.y = {}
custom_nightfly.command.y.bg = custom_nightfly.normal.a.bg
custom_nightfly.command.y.fg = custom_nightfly.normal.a.fg
custom_nightfly.insert.z = custom_nightfly.normal.b
custom_nightfly.normal.z = custom_nightfly.normal.b
custom_nightfly.command.z = custom_nightfly.normal.b

require'lualine'.setup {
  options = {
    icons_enabled = true,
    theme = custom_nightfly,
    component_separators = { left = '', right = ''},
    section_separators = { left = '', right = ''},
    always_divide_middle = true,
    globalstatus = false
  },
  sections = {
    lualine_a = { 'mode', skkstatus },
    lualine_b = { { 'branch', separator = '', padding = { left = 1, right = 0 } }, { 'diff', colored = false, separator = '' }, { 'filename', path = 1, shorting_target = 30, icon_enabled = true, icon = '' } },
    lualine_c = {},
    lualine_x = { 'filetype', { 'encoding', separator = '', padding = { left = 1, right = 0 } }, 'fileformat' },
    lualine_y = {{ 'location', separator = '' }, {'progress', padding = { left = 0, right = 1 } }},
    lualine_z = {{ 'diagnostics', sources = {'nvim_diagnostic'}, colored = false, symbols = { error = 'E:', warn = 'W:', info = 'I', hint = 'H:' } }}
  },
  extensions = {'fern'}
}
'''

[[plugins]]
repo = 'kyazdani42/nvim-web-devicons'

[[plugins]]
repo = 'romgrk/barbar.nvim'
hook_add = '''
  nnoremap <silent> <C-s> <Cmd>BufferPick<CR>
  nnoremap <silent> <leader>bd <Cmd>BufferOrderByDirectory<CR>
  nnoremap <silent> <leader>bl <Cmd>BufferOrderByLanguage<CR>
  nnoremap <silent> <S-TAB> <Cmd>BufferPrevious<CR>
  nnoremap <silent> <TAB> <Cmd>BufferNext<CR>
  nnoremap <silent> <A-1> :BufferGoto 1<CR>
  nnoremap <silent> <A-2> :BufferGoto 2<CR>
  nnoremap <silent> <A-3> :BufferGoto 3<CR>
  nnoremap <silent> <A-4> :BufferGoto 4<CR>
  nnoremap <silent> <A-5> :BufferGoto 5<CR>
  nnoremap <silent> <A-6> :BufferGoto 6<CR>
  nnoremap <silent> <A-7> :BufferGoto 7<CR>
  nnoremap <silent> <A-8> :BufferGoto 8<CR>
  nnoremap <silent> <A-9> :BufferLast<CR>
'''

[[plugins]]
repo = 'nvim-lua/popup.nvim'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'phaazon/hop.nvim'
hook_post_source = '''
lua require'hop'.setup()
'''
lua_add = '''
vim.keymap.set('n', 'gff', require'hop'.hint_words)
'''

[[plugins]]
repo = 'b3nj5m1n/kommentary'
lua_post_source = '''
require('kommentary.config').configure_language("typescriptreact", {
  single_line_comment_string = "//",
  multi_line_comment_strings = {"{/*", "*/}"}
})
'''

[[plugins]]
repo = 'kwkarlwang/bufresize.nvim'

[[plugins]]
repo = 'aserowy/tmux.nvim'
lua_post_source = '''
require('tmux').setup({
  navigation = {
    enable_default_keybindings = true,
  },
  copy_sync = {
    enable = false,
  },
})
'''

[[plugins]]
repo = 'MunifTanjim/nui.nvim'

[[plugins]]
repo = 'zah/nim.vim'

[[plugins]]
repo = 'gamoutatsumi/orgmode'
rev = 'feature/support-emacsclient'
lua_post_source = '''
require('orgmode').setup_ts_grammar()
require('orgmode').setup {
  org_agenda_files = {'~/Google Drive/マイドライブ/org/*', '~/Repositories/github.com/gamoutatsumi/my-orgs/**/*'},
  org_default_notes_file = '~/Google Drive/マイドライブ/org/refile.org',
}
'''

[[plugins]]
repo = 'levouh/tint.nvim'
lua_post_source = '''
require('tint').setup {}
'''

[[plugins]]
repo = 'uga-rosa/ccc.nvim'
lua_post_source = '''
require('ccc').setup {}
'''
