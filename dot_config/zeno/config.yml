contexts:
  commit: &commit
    lbuffer: 'git\scommit\s+'
  git: &git
    lbuffer: 'git\s+'
  diff: &diff
    lbuffer: 'git\sdiff\s+'
  checkout: &checkout
    lbuffer: 'git\scheckout\s+'
  workflow: &workflow
    lbuffer: 'gh\sworkflow\s.*'

snippets:
  - name: kubectl
    keyword: kc
    snippet: "kubectl {{command}}"
  - name: kubie ctx
    keyword: kx
    snippet: "kubie ctx"
  - name: kubie ns
    keyword: kn
    snippet: "kubie ns"
  - name: docker compose
    keyword: dc
    snippet: "docker compose"
  - name: pipe to vim
    keyword: V
    snippet: "| vim -"
    context:
      lbuffer: '.+\s+'
  - name: git status short branch
    keyword: gs
    snippet: git status --short --branch
  - name: git clean fdx
    keyword: call
    snippet: clean -fdx
    context: *git
  - name: git add
    keyword: ga
    snippet: git add {{file}}
  - name: git add all
    keyword: gaa
    snippet: git add --all
  - name: git commit
    keyword: gci
    snippet: git commit
  - name: git commit message
    keyword: gcim
    snippet: git commit -m '{{commit_message}}'
  - name: git commit fixup
    keyword: f
    snippet: --fixup {{commit_id}}
    context: *commit
  - name: git commit amend
    keyword: a
    snippet: --amend
    context: 
      lbuffer: 'git\scommit\s'
  - name: git commit amend noedit
    keyword: an
    snippet: --amend --no-edit
    context:
      lbuffer: 'git\scommit\s+'
  - name: git empty commit
    keyword: init
    snippet: --allow-empty -m 'Initial Commit'
    context: *commit
  - name: git diff
    keyword: gd
    snippet: git diff {{branch}}
  - name: git diff file
    keyword: f
    snippet: git diff -- {{file}}
    context: *diff
  - name: git diff branch file
    keyword: bf
    snippet: '{{branch}} -- {{file}}'
    context: *diff
  - name: git diff 2 branch
    keyword: bb
    snippet: '{{branch1}} {{brahcn2}}'
    context: *diff
  - name: git diff 2 branch file
    keyword: bbf
    snippet: '{{branch1}} {{brahcn2}} -- {{file}}'
    context: *diff
  - name: git diff cached
    keyword: c
    snippet: --cached
    context: *diff
  - name: git diff cached file
    keyword: cf
    snippet: --cached -- {{file}}
    context: *diff
  - name: git checkout
    keyword: gco
    snippet: git checkout {{branch}}
  - name: git checkout file
    keyword: f
    snippet: -- {{file}}
    context: *checkout
  - name: git checkout branch file
    keyword: bf
    snippet: '{{branch}} -- {{file}}'
    context: *checkout
  - name: git checkout track
    keyword: t
    snippet: --track {{origin_branch}}
    context: *checkout
  - name: git rebase squash
    keyword: squash
    snippet: rebase --interactive --autosquash {{branch}}
    context: *git
  - name: git main branch
    keyword: main_branch
    snippet: basename "$(git symbolic-ref --short refs/remotes/origin/HEAD)"
  - name: tms
    keyword: t
    snippet: tms
  - name: tmux swap pane
    keyword: ts
    snippet: tmux swap-pane -t
  - name: "null"
    keyword: "null"
    snippet: "> /dev/null 2>&1"
    context:
      lbuffer: '.+\s+'
  - name: stdout to null
    keyword: null1
    snippet: "> /dev/null"
    context:
      lbuffer: '.+\s+'
  - name: stderr to null
    keyword: null2
    snippet: "2> /dev/null"
    context:
      lbuffer: '.+\s+'
  - name: pipe grep
    keyword: "G"
    snippet: "| rg '{{pattern}}'"
    context:
      lbuffer: '\s*'
  - name: pipe head
    keyword: "H"
    snippet: "| head -n "
    context:
      lbuffer: '\s*'
  - name: copy stdout
    keyword: "C"
    snippet: "| pbcopy"
    context:
      lbuffer: '.+\s+'
  - name: pipe less
    keyword: "L"
    snippet: "| less"
    context:
      lbuffer: '.+\s+'
  - name: pipe jq
    keyword: "J"
    snippet: "| jq .{{query}}"
    context:
      lbuffer: '.+\s+'
  - name: pipe gron
    keyword: "JG"
    snippet: " | gron | grep"
    context:
      lbuffer: '.+\s+'
  - name: ungron
    keyword: "UG"
    snippet: " | gron -u"
    context:
      lbuffer: '.+\s+'
  - name: branch
    keyword: B
    snippet: git symbolic-ref --short HEAD
    context: *checkout
    evaluate: true
  - name: git switch
    keyword: gsw
    snippet: git switch {{branch}}
  - name: git switch create
    keyword: gswc
    snippet: git switch -c {{branch}}

completions:
  - name: kill
    patterns: 
      - "^kill( -9)? $"
    sourceCommand: "ps -ef | sed 1d"
    options:
      --multi: true
      --prompt: "'Kill Process> '"
    callback: "awk '{print $2}'"
  - name: ssh
    patterns:
      - "^ssh $"
    sourceCommand: "grep '^Host' ~/.ssh/config | awk '{print $2}'"
    options:
      --prompt: "'Connect to> '"
    callback: "awk '{print $1}'"
  - name: cd
    patterns:
      - "^cd $"
    sourceCommand: "fd --type=d"
    options:
      --prompt: "'To> '" 
      --preview-window: "right:50%"
      --preview: "lsd -l"
    callback: "awk '{print $1}'"
  - name: workflows
    patterns:
      - "^gh workflow.* $"
    sourceCommand: "gh workflow list"
    callback: "awk '{print $NF}'"
    options:
      --prompt: "'Workflow> '"
      --preview-window: "right:50%"
      --preview: "gh workflow view {1}"
  - name: Makefile
    patterns:
      - "^make $"
    sourceCommand: 'make help | sed -E "s/\x1b\[([0-9]{1,3}((;[0-9]{1,3})*)?)?[mGK]//g"'
    callback: "awk '{printf $1}'"
    options:
      --prompt: "'Target> '"
  - name: GitHub PRs
    patterns:
      - "^gh co $"
      - "^gh prv $"
    sourceCommand: "gh pr list"
    options:
      --prompt: "'Pull Request> '"
      --preview-window: "right:50%"
      --preview: "gh pr view {1}"
    callback: awk '{print $1}'
  - name: GitHub Issues
    patterns:
      - "^gh iv $"
    sourceCommand: "gh issue list"
    options:
      --prompt: "'Issue> '"
      --preview-window: "right:50%"
      --preview: "gh issue view {1}"
    callback: awk '{print $1}'
  - name: docker images
    patterns:
      - "^docker rmi $"
    options:
      --prompt: "'Image> '"
      --preview-window: "right:50%"
      --preview: "docker image inspect {1}"
      --multi: true
    callback: awk '{print $3}'
    sourceCommand: 'docker images | sed 1d'
  - name: docker containers (all)
    patterns:
      - "^docker rm $"
    options:
      --prompt: "'Container> '"
      --preview-window: "right:50%"
      --preview: "docker container inspect {1}"
    callback: awk '{print $1}'
    sourceCommand: 'docker ps --filter status=exited | sed 1d'
  - name: docker containers (running)
    patterns:
      - "^docker stop $"
    options:
      --prompt: "'Container> '"
      --preview-window: "right:50%"
      --preview: "docker container inspect {1}"
    callback: awk '{print $1}'
    sourceCommand: 'docker ps | sed 1d'
